# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2

from . import file_sync_pb2 as file__sync__pb2


class FileSyncStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.does_file_exist = channel.unary_unary(
            '/FileSync/does_file_exist',
            request_serializer=file__sync__pb2.FileRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
        )
        self.sync_file = channel.unary_unary(
            '/FileSync/sync_file',
            request_serializer=file__sync__pb2.FileSyncRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
        )
        self.check_version = channel.unary_unary(
            '/FileSync/check_version',
            request_serializer=file__sync__pb2.CompareHash.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
        )
        self.get_file = channel.unary_unary(
            '/FileSync/get_file',
            request_serializer=file__sync__pb2.FileRequest.SerializeToString,
            response_deserializer=file__sync__pb2.File.FromString,
        )
        self.upload_file = channel.unary_unary(
            '/FileSync/upload_file',
            request_serializer=file__sync__pb2.File.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
        )
        self.delete_file = channel.unary_unary(
            '/FileSync/delete_file',
            request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
        )
        self.get_file_hashes = channel.unary_stream(
            '/FileSync/get_file_hashes',
            request_serializer=file__sync__pb2.FileHashes.SerializeToString,
            response_deserializer=file__sync__pb2.Block.FromString,
        )
        self.get_file_list = channel.unary_unary(
            '/FileSync/get_file_list',
            request_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            response_deserializer=file__sync__pb2.FileList.FromString,
        )


class FileSyncServicer(object):
    """Missing associated documentation comment in .proto file."""

    def does_file_exist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sync_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def check_version(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def upload_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_file(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_file_hashes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_file_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FileSyncServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'does_file_exist': grpc.unary_unary_rpc_method_handler(
            servicer.does_file_exist,
            request_deserializer=file__sync__pb2.FileRequest.FromString,
            response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
        ),
        'sync_file': grpc.unary_unary_rpc_method_handler(
            servicer.sync_file,
            request_deserializer=file__sync__pb2.FileSyncRequest.FromString,
            response_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
        ),
        'check_version': grpc.unary_unary_rpc_method_handler(
            servicer.check_version,
            request_deserializer=file__sync__pb2.CompareHash.FromString,
            response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
        ),
        'get_file': grpc.unary_unary_rpc_method_handler(
            servicer.get_file,
            request_deserializer=file__sync__pb2.FileRequest.FromString,
            response_serializer=file__sync__pb2.File.SerializeToString,
        ),
        'upload_file': grpc.unary_unary_rpc_method_handler(
            servicer.upload_file,
            request_deserializer=file__sync__pb2.File.FromString,
            response_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
        ),
        'delete_file': grpc.unary_unary_rpc_method_handler(
            servicer.delete_file,
            request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
            response_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
        ),
        'get_file_hashes': grpc.unary_stream_rpc_method_handler(
            servicer.get_file_hashes,
            request_deserializer=file__sync__pb2.FileHashes.FromString,
            response_serializer=file__sync__pb2.Block.SerializeToString,
        ),
        'get_file_list': grpc.unary_unary_rpc_method_handler(
            servicer.get_file_list,
            request_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
            response_serializer=file__sync__pb2.FileList.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'FileSync', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class FileSync(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def does_file_exist(request,
                        target,
                        options=(),
                        channel_credentials=None,
                        call_credentials=None,
                        insecure=False,
                        compression=None,
                        wait_for_ready=None,
                        timeout=None,
                        metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileSync/does_file_exist',
                                             file__sync__pb2.FileRequest.SerializeToString,
                                             google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sync_file(request,
                  target,
                  options=(),
                  channel_credentials=None,
                  call_credentials=None,
                  insecure=False,
                  compression=None,
                  wait_for_ready=None,
                  timeout=None,
                  metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileSync/sync_file',
                                             file__sync__pb2.FileSyncRequest.SerializeToString,
                                             google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def check_version(request,
                      target,
                      options=(),
                      channel_credentials=None,
                      call_credentials=None,
                      insecure=False,
                      compression=None,
                      wait_for_ready=None,
                      timeout=None,
                      metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileSync/check_version',
                                             file__sync__pb2.CompareHash.SerializeToString,
                                             google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_file(request,
                 target,
                 options=(),
                 channel_credentials=None,
                 call_credentials=None,
                 insecure=False,
                 compression=None,
                 wait_for_ready=None,
                 timeout=None,
                 metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileSync/get_file',
                                             file__sync__pb2.FileRequest.SerializeToString,
                                             file__sync__pb2.File.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def upload_file(request,
                    target,
                    options=(),
                    channel_credentials=None,
                    call_credentials=None,
                    insecure=False,
                    compression=None,
                    wait_for_ready=None,
                    timeout=None,
                    metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileSync/upload_file',
                                             file__sync__pb2.File.SerializeToString,
                                             google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_file(request,
                    target,
                    options=(),
                    channel_credentials=None,
                    call_credentials=None,
                    insecure=False,
                    compression=None,
                    wait_for_ready=None,
                    timeout=None,
                    metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileSync/delete_file',
                                             google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                                             google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_file_hashes(request,
                        target,
                        options=(),
                        channel_credentials=None,
                        call_credentials=None,
                        insecure=False,
                        compression=None,
                        wait_for_ready=None,
                        timeout=None,
                        metadata=None):
        return grpc.experimental.unary_stream(request, target, '/FileSync/get_file_hashes',
                                              file__sync__pb2.FileHashes.SerializeToString,
                                              file__sync__pb2.Block.FromString,
                                              options, channel_credentials,
                                              insecure, call_credentials, compression, wait_for_ready, timeout,
                                              metadata)

    @staticmethod
    def get_file_list(request,
                      target,
                      options=(),
                      channel_credentials=None,
                      call_credentials=None,
                      insecure=False,
                      compression=None,
                      wait_for_ready=None,
                      timeout=None,
                      metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileSync/get_file_list',
                                             google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
                                             file__sync__pb2.FileList.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
